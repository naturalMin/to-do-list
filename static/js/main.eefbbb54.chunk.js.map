{"version":3,"sources":["atoms.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/SelectToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","categoryState","atom","key","default","TO_DO","savedTodo","localStorage","getItem","parseTodo","JSON","parse","toDoState","toDoSelector","selector","get","toDos","category","filter","toDo","Form","styled","form","Input","input","Button","button","props","theme","accentColor","CreateToDo","setToDos","useSetRecoilState","savedToDos","useRecoilValue","useForm","register","handleSubmit","setValue","useEffect","setItem","stringify","onSubmit","oldToDos","text","id","Date","now","required","placeholder","List","li","Text","span","ButtonGroup","div","ToDo","onClick","event","name","currentTarget","targetIndex","findIndex","newToDo","slice","DOING","DONE","Select","select","Option","option","SelectToDo","useRecoilState","setCategory","value","onInput","Container","H1","h1","Ul","ul","Add","textColor","ToDoList","useState","addBtn","SetAddBtn","map","current","GlobalStyle","createGlobalStyle","bgColor","App","Helmet","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eefbbb54.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\r\n\r\nexport enum Categories {\r\n  \"TO_DO\" = \"TO_DO\",\r\n  \"DOING\" = \"DOING\",\r\n  \"DONE\" = \"DONE\",\r\n} //enum default: number but changed string.\r\n\r\nexport interface IToDo {\r\n  text: string;\r\n  id: number;\r\n  category: Categories;\r\n}\r\n\r\nexport const categoryState = atom({\r\n  key: \"category\",\r\n  default: Categories.TO_DO,\r\n})\r\n\r\nconst savedTodo = localStorage.getItem(\"toDos\");\r\nconst parseTodo = JSON.parse(savedTodo as string);\r\n\r\nexport const toDoState = atom<IToDo[]>({\r\n  key: \"toDoState\",\r\n  default: savedTodo !== null ? parseTodo : [],\r\n});\r\n//localStorage setting\r\nexport const toDoSelector = selector({ \r\n  key: \"toDoSelector\",\r\n  get: ({ get }) => {\r\n    const toDos = get(toDoState); //atomÏùÑ selectorÎÇ¥Î∂ÄÎ°ú Ìò∏Ï∂ú.\r\n    const category = get(categoryState);\r\n    return toDos.filter((toDo) => toDo.category === category);\r\n  }\r\n})\r\n//selectorÎäî stateÎ•º Î≥¥Í∏∞Ï¢ãÍ≤å Î≥ÄÌòï, state logicÏù¥ Î≥ÄÌôîÌïòÏßÄÏïäÏùå.","import { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { categoryState, toDoState } from \"../atoms\";\r\nimport styled from \"styled-components\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Form = styled.form`\r\n  margin: 15px 0px;\r\n  padding: 0 20px;\r\n  height: 32px;\r\n  display: flex;\r\n  justify-content : space-between ;\r\n`;\r\nconst Input = styled.input`\r\n  width: 90%;\r\n  height: 100%;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  padding: 0 20px;\r\n  margin-right: 5px;      \r\n`;\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  width: 32px;\r\n  height: 100%;\r\n  font-size: 20px;\r\n  border-radius: 5px;\r\n  border: 0;\r\n  background-color: rgba(255,255,255,0.5);\r\n  &:hover {\r\n    background-color: ${props => props.theme.accentColor};\r\n  }  \r\n`;\r\n\r\ninterface IForm {\r\n  toDo: string;\r\n}\r\n\r\nfunction CreateToDo() {\r\n  const setToDos = useSetRecoilState(toDoState);  //toDo state set up\r\n  const savedToDos = useRecoilValue(toDoState);\r\n  const category = useRecoilValue(categoryState);\r\n  const { register, handleSubmit, setValue} = useForm();\r\n  const handleValid = ({toDo} : IForm) => {\r\n    setToDos(oldToDos => [{text: toDo, id: Date.now(), category}, ...oldToDos])\r\n    setValue(\"toDo\", \"\");    \r\n  };\r\n  useEffect(() => {\r\n    localStorage.setItem(\"toDos\", JSON.stringify(savedToDos))\r\n  },[savedToDos]); \r\n  //localStorageÏóê ÏûÖÎ†•Í∞í Ï†ÄÏû• \r\n  return (    \r\n      <Form onSubmit = {handleSubmit(handleValid)}>\r\n        <Input \r\n        {...register(\"toDo\", { required: \"Please Write a To Do.\"})}\r\n        placeholder = \"New To do...\"         \r\n        />\r\n        <Button>+</Button>\r\n      </Form>\r\n  );\r\n}\r\n\r\nexport default CreateToDo;","import { Categories, IToDo, toDoState } from \"../atoms\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst List = styled.li`      \r\n  margin: 10px auto;\r\n  width: 100%;\r\n  padding: 10px 20px;\r\n  background-color: #f6e58d;\r\n  box-shadow: 5px 5px 10px rgba(0,0,0,0.5);\r\n  border-radius: 5px;   \r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\nconst Text = styled.span`\r\n  font-size: 18px;\r\n  color: rgba(0,0,0);\r\n  line-height: 1.5;  \r\n`;\r\nconst ButtonGroup = styled.div`  \r\n`;\r\nconst Button = styled.button`  \r\n  border: 0;\r\n  border-radius: 3px;\r\n  padding: 5px;\r\n  background-color: transparent;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    text-shadow: 1px 1px 2px gray;\r\n  }  \r\n`;\r\n\r\nfunction ToDo({ text, id, category}:IToDo) {\r\n  const setToDos = useSetRecoilState(toDoState);    \r\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    const { currentTarget: { name } } = event;\r\n    setToDos((oldToDos) => {\r\n      const targetIndex = oldToDos.findIndex(toDo => toDo.id === id); // ÌÅ¥Î¶≠ÌñàÏùÑÎïå Ìï¥Îãπ Î≤àÌò∏ Ï∂îÏ∂ú\r\n      const newToDo = {text, id, category: name as Categories};\r\n      return [...oldToDos.slice(0, targetIndex),\r\n        newToDo, ...oldToDos.slice(targetIndex + 1),\r\n      ]; // toDo Ï∂îÍ∞ÄÌïòÎäî Í≥ºÏ†ï\r\n    })\r\n  };\r\n  const DelToDos = () => {\r\n    setToDos((oldToDos) => {\r\n      const targetIndex = oldToDos.findIndex(toDo => toDo.id === id);\r\n      return [\r\n        ...oldToDos.slice(0, targetIndex),\r\n        ...oldToDos.slice(targetIndex + 1),\r\n        ];\r\n  })};\r\n  \r\n  return (\r\n    <List>      \r\n      <Text>{text}</Text>\r\n      <ButtonGroup>\r\n        {category !== Categories.DOING && (\r\n        <Button name = {Categories.DOING} onClick = {onClick}>üü¢</Button>\r\n        )}\r\n        {category !== Categories.TO_DO && (\r\n        <Button name = {Categories.TO_DO} onClick = {onClick}>üü°</Button>\r\n        )}\r\n        {category !== Categories.DONE && (\r\n        <Button name = {Categories.DONE} onClick = {onClick}>üîµ</Button>\r\n        )} \r\n        {/* // Ìï¥ÎãπÎêòÎäî Ïπ¥ÌÖåÍ≥†Î¶¨Î•º ÌÅ¥Î¶≠ÌïòÏßÄ ÏïäÏùÑ Îïå Î≤ÑÌäºÏùÑ Î≥¥Ïó¨Îùº */}\r\n        <Button onClick = {DelToDos}>X</Button>\r\n      </ButtonGroup>    \r\n      \r\n    </List>\r\n  );\r\n}\r\n\r\nexport default ToDo;","import React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { Categories, categoryState} from \"../atoms\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n  margin: 15px 0px;\r\n  padding: 0 20px;\r\n  height: 32px;\r\n`;\r\nconst Select = styled.select`\r\n  width: 90%;\r\n  height: 90%;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  padding: 0 18px;\r\n  font-size: 15px;\r\n`;\r\nconst Option = styled.option`\r\n  font-size: 15px;\r\n`;\r\n\r\nfunction SelectToDo() {\r\n  const [category, setCategory] = useRecoilState(categoryState);\r\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\r\n    setCategory(event.currentTarget.value as any);\r\n  };\r\n  return (\r\n    <Form>\r\n      <Select value = {category} onInput = {onInput}>\r\n        <Option value = {Categories.TO_DO}>\r\n          üü° To Do\r\n        </Option>\r\n        <Option value = {Categories.DOING}>\r\n          üü¢ Doing\r\n        </Option>\r\n        <Option value = {Categories.DONE}>\r\n          üîµ Done\r\n        </Option>\r\n      </Select>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SelectToDo;","import CreateToDo from \"./CreateToDo\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { toDoSelector } from \"../atoms\";\r\nimport ToDo from \"./ToDo\";\r\nimport SelectToDo from \"./SelectToDo\";\r\nimport styled  from \"styled-components\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 480px;  \r\n`;\r\nconst H1 = styled.h1`\r\n  font-size: 50px;\r\n  font-weight: 400;\r\n  text-align: center;\r\n`;\r\nconst Ul = styled.ul`\r\n  margin: auto;\r\n  width: 93%;  \r\n  border-radius: 10px;\r\n  //background-color: #f6e58d;\r\n  //box-shadow: 5px 10px 20px rgba(0,0,0,0.5);\r\n`;\r\nconst Add = styled.button`\r\n  display: block;\r\n  cursor: pointer;\r\n  margin: 10px auto;\r\n  background-color: transparent;\r\n  border: 0;\r\n  color: ${props=>props.theme.textColor};\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n`;\r\n\r\nfunction ToDoList() {\r\n  const toDos = useRecoilValue(toDoSelector);\r\n  const [addBtn, SetAddBtn] = useState(false);\r\n  const onClick = () => {\r\n    SetAddBtn((current) => !current);    \r\n  }\r\n  return (    \r\n    <Container>      \r\n      <H1>TASK LIST</H1>\r\n      <hr />\r\n      {addBtn ? <CreateToDo /> : null}\r\n      <SelectToDo />            \r\n      <Ul>\r\n        {toDos?.map(toDo => <ToDo key = {toDo.id} {...toDo}/>)}\r\n      </Ul>\r\n      <Add onClick = {onClick}>\r\n        {addBtn? \"- Hide New To Do...\" : \"+ Add New To Do...\"}\r\n      </Add>      \r\n    </Container>    \r\n  );\r\n}\r\n\r\nexport default ToDoList;","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\nimport { Helmet } from \"react-helmet\";\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n  display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n  display: none;\n  }\n  body {\n  line-height: 1.2;\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${props => props.theme.bgColor};\n  color: ${props => props.theme.textColor};  \n  }\n  menu, ol, ul {\n  list-style: none;\n  }\n  blockquote, q {\n  quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n  content: '';\n  content: none;\n  }\n  table {\n  border-collapse: collapse;\n  border-spacing: 0;\n  }\n  * {\n    box-sizing : border-box;\n  }\n  a {\n    text-decoration: none;\n    color : inherit;\n    //inherit : Î∂ÄÎ™® colorÏóêÏÑú Í∞ÄÏ†∏Ïò¥ \n  }\n`;\n\nfunction App() {\n  return (\n    <>\n      <Helmet>\n        <title>TASK LIST</title>\n      </Helmet>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from \"./theme\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme = {theme}>    \n        <App />\n      </ThemeProvider>\n    </RecoilRoot>    \n  </React.StrictMode>,\n  document.getElementById('root'));\n\n\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n  bgColor: \"#1e3799\",\r\n  textColor: \"#f6b93b\",\r\n  accentColor: \"#38ada9\",\r\n};"],"sourceRoot":""}